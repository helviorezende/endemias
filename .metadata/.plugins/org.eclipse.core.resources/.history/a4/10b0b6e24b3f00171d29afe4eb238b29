package org.wpattern.helviorezende.endemias.writecsv;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import org.wpattern.helviorezende.endemias.entitycsv.EntityCsv;
import org.wpattern.helviorezende.endemias.entitycsv.PacienteCsv;
import org.wpattern.helviorezende.endemias.paciente.PacienteService;

import com.opencsv.CSVReader;

@Service
public class WriteServiceCsv implements IWriteServiceCsv{
	

    private final ArrayList<EntityCsv> entityCsvs;

    public WriteServiceCsv() {

    	entityCsvs = new ArrayList();
    }

    @Override
    public ArrayList<EntityCsv> getListOfCountries()  {

        FileInputStream fis = null;

        try {

          
        	String fileName = "src/main/resources/dengue.csv";

            fis = new FileInputStream(new File(fileName));
            CSVReader reader = new CSVReader(new InputStreamReader(fis));
            String[] nextLine;
            reader.readNext();
            while ((nextLine = reader.readNext()) != null) {
            	
            	//registros de uma linha do csv
            	String linhaRegistroCsv = nextLine[0];
            	
            	//quebra os registros  armazena no array
            	String array[] = linhaRegistroCsv.split(";");
            	
            	//posicao da coluna NM_PACIENT do csv
            	String nome = array[12];
            	
            	//posicao da coluna DT_NASC do csv
            	String dataNascimento = array[13];
            	

            			
            	SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                   Date date = formatter.parse(dataNascimento);
   	
            	
                PacienteCsv pacienteCsv = new PacienteCsv(nome,
                		date);
                
                EntityCsv entityCsv = new EntityCsv(pacienteCsv);
                
                entityCsvs.add(entityCsv);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(PacienteService.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PacienteService.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException e) {
			
		}finally {
            try {
                if (fis != null) {
                    fis.close();
                }
            } catch (IOException ex) {
                Logger.getLogger(PacienteService.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return entityCsvs;
    }

}
